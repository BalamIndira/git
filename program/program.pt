
import pandas as pd

# Load the dataset (assuming iris.csv is the file)
url = "https://archive.ics.uci.edu/ml/machine-learning-databases/iris/iris.data"
column_names = ['sepal_length', 'sepal_width', 'petal_length', 'petal_width', 'species']
df = pd.read_csv(url, header=None, names=column_names)

# Display the first few rows
print(df.head())

# Checking for missing values
print(df.isnull().sum())

# String manipulation: remove extra spaces and convert to lowercase
df['species'] = df['species'].str.strip().str.lower()

# Check the unique values in 'species' column to verify cleaning
print(df['species'].unique())

import numpy as np

# Convert specific columns to a NumPy array
sepal_length = df['sepal_length'].to_numpy()
sepal_width = df['sepal_width'].to_numpy()

# Calculate statistics
sepal_length_mean = np.mean(sepal_length)
sepal_width_median = np.median(sepal_width)

print(f"Mean of sepal length: {sepal_length_mean}")
print(f"Median of sepal width: {sepal_width_median}")

from sklearn.model_selection import train_test_split

# Prepare the feature columns and the target
X = df.drop(columns=['species'])  # Features: sepal and petal dimensions
y = df['species']  # Target: species

# Split the dataset into training (80%) and testing (20%) sets
X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.2, random_state=42)

print(f"Training set size: {X_train.shape}")
print(f"Testing set size: {X_test.shape}")

from sklearn.linear_model import LogisticRegression
from sklearn.metrics import accuracy_score, classification_report

# Initialize and train the logistic regression model
model = LogisticRegression(max_iter=200)
model.fit(X_train, y_train)

# Make predictions on the test set
y_pred = model.predict(X_test)

# Evaluate the model
accuracy = accuracy_score(y_test, y_pred)
report = classification_report(y_test, y_pred)

print(f"Accuracy: {accuracy}")
print(f"Classification Report:\n{report}")